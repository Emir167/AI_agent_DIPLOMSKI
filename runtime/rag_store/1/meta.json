{"chunks": ["Za konceptualni model:  \nU dijagramu klasa (konceptualnom modelu) pun romb se zove KOMPOZICIJA (slab objekat u  \nPMOVu), a isprekidana linija između veze 2 objekta se zove ASOCIJACIJA (agregacija u  \nPMOVu). 1. Objasniti temu seminarskog rada. - Svako za sebe. 2. Šta su apstraktni koncepti softverskog sistema? - Apstraktni koncepti softverskog sistema su osnovni principi i ideje koje se koriste za  \nrazumevanje, projektovanje i implementaciju softverskih rešenja. Neki od primera su  \nenkapsulacija, apstrakcija, nasleđivanje, polimorfizam itd. 3. Šta su konkretni koncepti softverskog sistema? - Konkretni koncepti softverskog sistema su specifične implementacije apstraktnih koncepata  \nkoje se koriste za izgradnju i upravljanje softverskim rešenjima.", "a su specifične implementacije apstraktnih koncepata  \nkoje se koriste za izgradnju i upravljanje softverskim rešenjima. Neki od primera su klase,  \nobjekti, metode i funkcije. 4. Navesti 5 standardnih funkcionalnosti koncepata. - Kreiraj, ubaci, pretraži, promeni, obriši. 5. Koja je uloga glavnog menija? - Korisnicima pruži organizovan i intuitivan način za pristup različitim funkcijama i opcijama  \naplikacije i za navigaciju i upravljanje aplikacijom. 6. Šta su slučajevi korišćenja? - Slučaj korišćenja opisuje skup scenarija (use -case pojavljivanja), odnosno skup željenih  \nkorišćenja sistema od strane aktora. 7. Iz kojih sekcija se sastoje slučajevi korišćenja? - Slučajevi korišćenja se sastoje iz scenarija (glavnnih i alternativnih) i akcija. 8.", "se sastoje slučajevi korišćenja? - Slučajevi korišćenja se sastoje iz scenarija (glavnnih i alternativnih) i akcija. 8. Objasniti šta su glavni i alternativna scenarija. - Glavni scenario je scenario koji je uspešan, odnosno sve operacije će da izvrši kako bez ikakve  \ngreške. - Alternativni scenario se desi kada dođe do greške prilikom izvršavanja neke operacije. 9. Iz čega se sastoji scenario slučaja koriščenja? - Iz glavnog i alternativnog scenarija. 10. Navesti tipove akcija kod scenarija slučaja korišćenja. - APUSO znači Aktor Priprema Ulaz za Sistemsku Operaciju  \n- APSO znači Aktor Poziva sistem da izvrši Sistemsku Operaciju  \n- ANSO znači Aktor izvršava NeSistemsku Operaciju  \n- SO znači sistem izvršava Sistemsku Operaciju  \n- IA znači Izlazni Argument  \n11.", "ktor izvršava NeSistemsku Operaciju  \n- SO znači sistem izvršava Sistemsku Operaciju  \n- IA znači Izlazni Argument  \n11. Šta je rezultat faze analize u razvoju softverskog sistema? - Rezultat faze analize je logička struktura i ponašanje softverskog sistema. 12. Preko čega se opisuje ponašanje u fazi analize kod razvoja softverskog sistema? - Preko sistemskih dijagrama sekvenci. 13. Da li faza analize daje odgovor na pitanje \"kako radi softverski sistem\" ili \"šta radi softverski  \nsistem\"? - Daje odgovor na pitanje šta radi softverski sistem. Kako radi ćemo videti u fazi projektovanja. 14. Objasniti potpis sistemske operacije. - Sistemska operacija opisuje ponašanje softverskog sistema. Sistemska operacija ima svoj  \npotpis, koji sadrži ime metode i opciono ulazne i/ili izlazne argumente.", "verskog sistema. Sistemska operacija ima svoj  \npotpis, koji sadrži ime metode i opciono ulazne i/ili izlazne argumente. 15. Šta opisuju sekvencni dijagrami u fazi analize? - Ponašanje softverskog sistema. 16. Koliko ima sekvencnih dijagrama za jedan slučaj korišćenja? - Po jedan za svaki scenario (glavni i jedan ili više alternativnih). 17. Koji se tipovi akcija scenarija slučaja korišćenja prenose u fazu analize na osnovu kojih se  \ncrtaju sekvencni dijagrami? - APSO i IA akcije. 18. Šta se prenosi iz preduslova slučaja korišćenja u fazu analize na osnovu čega se crtaju  \nsekvencni dijagrami? - Liste koje treba učitati da bi se navedena operacija mogla izvršiti. 19. Objasniti preduslove i postuslove kod sistemskih operacija.", "reba učitati da bi se navedena operacija mogla izvršiti. 19. Objasniti preduslove i postuslove kod sistemskih operacija. - Preduslov – pre izvršenja sistemske operacije moraju biti zadovoljeni određeni preduslovi  \n(sistem mora biti u odgovarajućem stanju). Postuslovi – posle izvršenja sistemske operacije u sistemu moraju biti zadovoljeni određeni  \npostuslovi (sistem mora biti u odgovarajućem stanju ili se poništava rezultat operacije). 20. Za koje tipove ugovora se daju preduslovi, a za koji ne daju? - Preduslovi se daju za kreiranje, ubacivanje, izmenu i brisanje, za ostale se ne daju. 21. Preko čega se opisuje struktura softverskog sistema u fazi analize? - Pomoću konceptualnog i relacionog modela. 22.", "21. Preko čega se opisuje struktura softverskog sistema u fazi analize? - Pomoću konceptualnog i relacionog modela. 22. Navesti i objasniti 4 tipa veza koje postoje između klasa (koncepata) u konceptualnom  \nmodelu? - Kompozicija, asocijacija, agregacija, generalizacija -specijalizacija. 23. Šta je primarni ključ relacije? - Primarni ključ relacije je jedinstveni identifikator nekog objekta. To je atribut ili skup atributa  \nčije vrednosti jedinstveno identifikuju određeni objekat. 24. Šta je spoljni ključ relacije? - Spoljni ključ je atribut ili skup atributa u jednoj tabeli koji se odnosi na primarni ključ u drugoj  \ntabeli. 25. Šta je referencijalni integritet?", "skup atributa u jednoj tabeli koji se odnosi na primarni ključ u drugoj  \ntabeli. 25. Šta je referencijalni integritet? - Referencijalni integritet je princip koji osigurava da vrednost spoljnog ključa u jednoj tabeli  \nodgovara vrednosti primarnog ključa u drugoj tabeli. Ovo osigurava da veze između tabela ostanu validne. 26. Šta je integritet entiteta? - Integritet entiteta znači da svaki red u tabeli mora biti jedinstveno identifikovan primarnim  \nključem. Dva reda ne smeju da imaju iste vrednosti primarnog ključa, i primarni ključ ne sme da  \nbude NULL. 27. Kako se prevodi tip veze agregacija, između dva koncepta (kardinalnost preslikavanja  \nNezavistanKoncept (1,1) – (0,*) ZavistanKoncept) kod konceptualnog modela, u relacioni  \nmodel?", "inalnost preslikavanja  \nNezavistanKoncept (1,1) – (0,*) ZavistanKoncept) kod konceptualnog modela, u relacioni  \nmodel? - U relacionom modelu, agregacija se implementira tako što se primarni ključ nezavisnog  \nkoncepta dodaje kao spoljni ključ u zavisni koncept, čime se uspostavlja veza jedan -prema-više. 28. Kako se prevodi tip veze kompozicija, između dva koncepta (kardinalnost preslikavanja  \nNezavistanKoncept(1,1) – (0,*)ZavistanKoncept) kod konceptualnog modela, u relacioni model? - Zavisni koncept ne može postojati bez nezavisnog koncepta. Primarni ključ nezavisnog  \nkoncepta dodaje se i kao primarni i spoljni ključ u zavisni koncept. 29.", "ezavisnog koncepta. Primarni ključ nezavisnog  \nkoncepta dodaje se i kao primarni i spoljni ključ u zavisni koncept. 29. Kako se prevodi tip veze više prema više (asocijativni koncept (klasa)), između dva koncepta  \n(kardinalnost preslikavanja Koncept1(0,) – (0,)Koncept2) kod konceptualnog modela, u relacioni  \nmodel? - Veza više prema više se prevodi u relacioni model pomoću treće tabele (asocijativne tabele)  \nkoja sadrži spoljne ključeve oba koncepta. 30. Kako se prevodi tip veze generalizacija -specijalizacija, između dva koncepta (kardinalnost  \npreslikavanja KonceptGeneralizacije(1,1) – (0,1)KonceptSpecijalizacije) kod konceptualnog  \nmodela, u relacioni model?", "preslikavanja KonceptGeneralizacije(1,1) – (0,1)KonceptSpecijalizacije) kod konceptualnog  \nmodela, u relacioni model? - Generalizacija -specijalizacija se implementira u relacionom modelu kreiranjem tabele za svaki  \nspecijalizovani koncept koji sadrži primarni ključ generalizovanog koncepta kao svoj primarni  \nključ i dodatne atribute specijalizovanog koncepta. 31. Šta su vrednosna ograničenja? - Vrednosna ograničenja su pravila koja se primenjuju na vrednosti podataka u atributima  \nrelacije. Na primer, ograničenja mogu biti da atribut mora da ima jedinstvene vrednosti, određeni  \nraspon vrednosti, ili ne sme da bude NULL. 32. Šta su strukturna ograničenja?", "a da ima jedinstvene vrednosti, određeni  \nraspon vrednosti, ili ne sme da bude NULL. 32. Šta su strukturna ograničenja? - Strukturna ograničenja definišu pravila koja se odnose na strukturu podataka, uključujući  \nodnose između različitih tabela i kardinalnost tih odnosa. Ona osiguravaju da podaci u tabelama  \nostanu konzistentni i validni u kontekstu definisanih veza. 33. Kako se određuju strukturna ograničenja za relacije dobijene iz tipa veze agregacija, između  \ndva koncepta (kardinalnost preslikavanja NezavistanKoncept (1,1) – (0,*) ZavistanKoncept) kod  \nkonceptualnog modela? - Strukturna ograničenja se implementiraju tako da tabela ZavistanKoncept sadrži spoljni ključ  \nkoji referencira primarni ključ tabele NezavistanKoncept.", "entiraju tako da tabela ZavistanKoncept sadrži spoljni ključ  \nkoji referencira primarni ključ tabele NezavistanKoncept. Kardinalnost (1,1) – (0,*) osigurava da  \nsvaki red u tabeli ZavistanKoncept može biti povezan sa jednim redom u tabeli  \nNezavistanKoncept, ali ne mora da ima vezu. 34. Kako se određuju strukturna ograničenja za relacije dobijene iz tipa veze kompozicija,  \nizmeđu dva koncepta (kardinalnost preslikavanja NezavistanKoncept(1,1) – \n(0,*)ZavistanKoncept) kod konceptualnog modela? - Svaki red u tabeli ZavistanKoncept mora imati vezu sa jednim redom u tabeli  \nNezavistanKoncept. Ova veza je obavezna i zavisni koncept ne može postojati bez nezavisnog. 35.", "jednim redom u tabeli  \nNezavistanKoncept. Ova veza je obavezna i zavisni koncept ne može postojati bez nezavisnog. 35. Kako se određuju strukturna ograničenja za relacije dobijene iz tipa veze više prema više  \n(asocijativni koncept (klasa)), između dva koncepta (kardinalnost preslikavanja Koncept1(0,) – \n(0,)Koncept2) kod konceptualnog modela? - Strukturna ograničenja se implementiraju kreiranjem asocijativne tabele koja sadrži spoljne  \nključeve oba koncepta. Ova tabela omogućava uspostavljanje više -veza između originalna dva  \nkoncepta. 36. Kako se određuju strukturna ograničenja za relacije dobijene iz tipa veze \ngeneralizacijaspecijalizacija, između dva koncepta (kardinalnost preslikavanja \nKonceptGeneralizacije(1,1) – \n(0,1)KonceptSpecijalizacije) kod konceptualnog modela?", "ncepta (kardinalnost preslikavanja \nKonceptGeneralizacije(1,1) – \n(0,1)KonceptSpecijalizacije) kod konceptualnog modela? - Strukturna ograničenja se implementiraju tako da svaka specijalizovana tabela sadrži primarni  \nključ generalizovane tabele, koji se koristi kao primarni ključ specijalizovane tabele. Ovo  \nosigurava da svaka instanca specijalizovanog koncepta odgovara jednoj instanci generalizovanog  \nkoncepta."]}